name: CI/CD para Aplicação Java

on:
  push:
    branches:
      - main # Build e deploy automático em staging quando houver push
  workflow_dispatch: # Permite disparar o deploy para produção manualmente

jobs:
  build:
    name: Build e Teste
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build com Maven
        run: mvn clean package -DskipTests

      - name: Testes Automatizados
        run: mvn test

  deploy-staging:
    name: Deploy para Staging
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Build e Push da Imagem para DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t meu-usuario/minha-aplicacao-staging .
          docker push meu-usuario/minha-aplicacao-staging
      - name: Deploy em Staging (Docker Compose)
        run: |
          docker-compose -f docker-compose.yml up -d --build

  deploy-production:
    name: Deploy para Produção
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Build e Push da Imagem para DockerHub (Produção)
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t meu-usuario/minha-aplicacao-production .
          docker push meu-usuario/minha-aplicacao-production
      - name: Deploy em Produção (Docker Compose)
        run: |
          docker-compose -f docker-compose.yml up -d --build