name: CI/CD para Aplicação Java

on:
  push:
    branches:
      - main # Build e deploy automático em staging quando houver push
  workflow_dispatch: # Permite disparar o deploy para produção manualmente

jobs:
  build:
    name: Build e Teste
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build com Maven
        run: mvn clean package -DskipTests

      - name: Testes Automatizados
        run: mvn test

  deploy-staging:
    name: Deploy para Staging
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login no DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build e Push da Imagem para o DockerHub (Staging)
        run: |
          docker build -t matheuspino/bem-estar-staging .
          docker push matheuspino/bem-estar-staging

  deploy-production:
    name: Deploy para Produção
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Login no DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build e Push da Imagem para o DockerHub (Produção)
        run: |
          docker build -t matheuspino/bem-estar-production .
          docker push matheuspino/bem-estar-production